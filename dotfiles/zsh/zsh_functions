#			Example for a builtin command      #
# cd()                                         #
# {                                            #
#     builtin cd $@;                           #
#     ls;                                      #
# }                                            #
################################################
# "$@" allows for two separate arguments

#	Moves the prompt to the bottom of the terminal window
function bottom_prompt {
  # Move the cursor to the bottom of the terminal window
#   tput cud $((${LINES} - 1))
  tput cup $((${LINES}-1)) 0
  # Save the current position
  tput sc
  # Clear the line
  tput el
  # Display the prompt
  zle && zle reset-prompt
  zle -R
  # Restore the saved position
  tput rc
}

function la() {
	gls --color=auto -AlpFN "$@";
}

function wget() {
	wget --no-check-certificate "$@";
}

function t() {
	tmux "$@";
}

function grep() {
	command grep --color=auto "$@";
}

function egrep() {
	command egrep --color=auto "$@";
}

function fgrep() {
	command fgrep --color=auto "$@";
}

function k() {
	kubectl "$@";
}

function h() {
	helm "$@";
}

function s() {
	source ~/.zshrc;

}
#			Use for committing often
function gacs() {
	git add .
	git commit -m "$1"
	git status
}
#			Best use for incremental or final push at the end of session
function gacp() {
	git add .
	git commit -m "$1"
	git push
}

function gl() {
	git log --oneline --decorate --graph;
}

function gla() {
	git log --oneline --decorate --graph --all;
}

function glp() {
	git log --pretty=oneline
}

function cd() {
	builtin cd "$@";
	la;
}
#			Add current date to file name
function add-date() {
	mv $1 "$(date +%Y%m%d_%H%M%S)_$1"
  }
#			Capitalize each word of file name in a directory
function zmvC() {
<<<<<<< HEAD
	zmv "$@" '(*).(*)' '${(C)1}.$2' ;
}
#			Change the extension to lower case
function zmvExtL() {
	zmv "$@" '(*).(*)' '$1.${(L)match[2]}' ;
}
#			Changes all filenames to lowercase in a directory
function zmvL() {
	zmv "$@" '(*).(*)' '${(L)1}.$2' ;
=======
	zmv "$@" '(*).(*)' '${(C)1}.$2';
}
#			Change the extension to lower case
function zmvExtL() {
	zmv "$@" '(*).(*)' '$1.${(L)match[2]}';
}
#			Changes all filenames to lowercase in a directory
function zmvL() {
	zmv "$@" '(*).(*)' '${(L)1}.$2';
>>>>>>> 84cee2f7e8c803a2fab5dcb87057a3a2a21f5488
}
#			Change "-" to spaces filenames
function zmvSp() {
	zmv "$@" '*-*' '$f:gs/-/ '
}
#			Change . to spaces except the last one
function zmvDot() {
	zmv "$@" '(*.*)(.*)' '${1//./ }$2'
}
#			Remove "What ever text - "from the beginning of file name
function zmvR() {
	zmv "$@" 'ChangeMe - (*)' '$1'
}
#			Remove space before the extension
function zmvEndSp() {
	zmv "$@" '(*) (.*)' '${1}${2}'
}
#			Remove from start of filename
function zmvFront() {
	repl="$1"
<<<<<<< HEAD
#	echo "Enter beginning of filename to replace: "
#	read repl
	zmv "$@" "$repl (*)" '$1'
=======
#			echo "Enter beginning of filename to replace: "
#			read repl
	zmv "$@" "$repl (*)" '$1$2'
>>>>>>> 84cee2f7e8c803a2fab5dcb87057a3a2a21f5488
}
#			Remove from end of filename
function zmvEnd() {
	repl="$1"
<<<<<<< HEAD
#	echo "Enter end of filename to replace: "
#	read repl
=======
#			echo "Enter end of filename to replace: "
#			read repl
>>>>>>> 84cee2f7e8c803a2fab5dcb87057a3a2a21f5488
	zmv "$@" "(*) $repl" '$1'
}
#			Remove {x} trailing digits before extension
function zmvTdigit() {
	zmv "$@" "(*) [0-9](#c8)(*)" '$1$2'
<<<<<<< HEAD
=======
}

function remove_digits() {
	local digits="$1"
	shift
	zmv "$@" "\$1${(l:-$digits::)1}"
}
# 			Renames mp3 or m4a file/s in the current folders to the "Title" that is specified in the metadata via exiftool.
function zmvMp3Meta() {
 	zmv "$@" '(*).(mp3|m4a)' '$1${${(f)"$(exiftool -S -s -Title $2.$3)"}//[:\/]/_}.$3'
# 	zmv "$@" '(**/)(*).(mp3|m4a)' '$1${${(f)"$(exiftool -S -s -Title $2.$3)"}//[:\/]/_}.$3'

>>>>>>> 84cee2f7e8c803a2fab5dcb87057a3a2a21f5488
}
#			open man pages in Preview
function preman() {
	man -t "$@" | open -f -a "Preview";
}
function bbman() {
<<<<<<< HEAD
	MANWIDTH=80 MANPAGER='col -bx' man "$@" | bbedit --clean --view-top -t "man $@" ;
=======
	MANWIDTH=80 MANPAGER='col -bx' man "$@" | bbedit --clean --view-top -t "man $@";
>>>>>>> 84cee2f7e8c803a2fab5dcb87057a3a2a21f5488
}
function xmanpage() {
	open x-man-page://$@;
}
function vnc() {
    open vnc://"$USER"@"$1";
}
function obsav() {
	afplay /System/Library/Sounds/Hero.aiff;
}
#			Colormap
function colormap() {
	for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'}; done
}
#			Replaces spaces with underscores
function replspaces () {
  echo $@ | sed 's/ /_/g'
}

# function lsa() {
# 	ls -al "$@";
# }
#
# function ll() {
# 	exa --icons --color=automatic --git --no-user --no-time -U --group-directories-first -Fla "$@";
# }
#
# function lf() {
# 	exa --icons --color=automatic --git --no-user --no-time -U --group-directories-first -Fl "$@";
# }
#
# function l.() {
# 	exa --icons --color=automatic --git --no-user --no-time -U --group-directories-first -Fd .* "$@";
# }

function del() {
	mv "$@" ~/.Trash
}

function batt() {
	pmset -g batt | grep -Eo "\d+%";
}

function pa() {
	find . -mindepth 2 -maxdepth 2 -name .git -print -execdir git pull \;
}

function weather() {
	curl -s "v2.wttr.in/rdu?format=1"
}

function flushdns() {
<<<<<<< HEAD
	sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder ;
=======
	sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder;
>>>>>>> 84cee2f7e8c803a2fab5dcb87057a3a2a21f5488
}

function restart() {
	shutdown -hr now
<<<<<<< HEAD
=======
}

function versions() {
  echo "+-------------------+------------+"
  printf "| cli tool          | version    |\n"
  echo "+-------------------+------------+"
  brew list --formula --versions ansible awscli azure-cli circleci colima docker docker-compose gh git helm kind kops kubernetes-cli minikube node python terraform | awk '{printf "| \033[1;34m%-15s\033[0m --> \033[1;32m%-10s\033[0m |\n", $1, $NF}'
  echo "+-------------------+------------+"
>>>>>>> 84cee2f7e8c803a2fab5dcb87057a3a2a21f5488
}